;; -*- mode: emacs-lisp -*-
(require 'cl)

(require 'package)
(add-to-list 'package-archives '("melpa" . "http://melpa.milkbox.net/packages/"))
(add-to-list 'package-archives '("org" . "http://orgmode.org/elpa/") t)

(package-initialize)

(defvar my-emacs-start-time (current-time))

(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(default ((t (:height 140 :family "Monaco"))))
 '(bm-face ((t (:background "#eab700" :weight bold :foreground "black"))))
 '(comint-highlight-prompt ((t nil)))
 '(diff-refine-added ((t (:background "green" :foreground "black"))))
 '(diff-refine-removed ((t (:background "red" :foreground "black"))))
 '(magit-diff-added ((t (:foreground "green"))))
 '(magit-diff-added-highlight ((t (:foreground "#22aa22"))))
 '(magit-diff-context-highlight ((t nil)))
 '(magit-diff-file-heading ((t nil)))
 '(magit-diff-file-heading-highlight ((t nil)))
 '(magit-diff-hunk-heading ((t (:foreground "grey30"))))
 '(magit-diff-hunk-heading-highlight ((t nil)))
 '(magit-diff-removed ((t (:foreground "#aa2222"))))
 '(magit-diff-removed-highlight ((t (:foreground "#aa2222"))))
 '(magit-section-highlight ((t nil)))
 '(minibuffer-prompt ((t (:foreground "#839496"))))
 '(mode-line ((t (:background "#404045" :foreground "gray60" :inverse-video nil))))
 '(org-done ((t (:foreground "disabledControlTextColor" :strike-through t))))
 '(org-headline-done ((t (:foreground "disabledControlTextColor" :strike-through t))))
 '(org-level-1 ((t (:inherit variable-pitch :foreground "#839496" :height 1.0))))
 '(org-level-2 ((t (:inherit variable-pitch :foreground "#839496" :height 1.0))))
 '(org-level-3 ((t (:inherit variable-pitch :foreground "#839496" :height 1.0))))
 '(org-level-4 ((t (:inherit variable-pitch :foreground "#839496" :height 1.0))))
 '(org-level-5 ((t (:inherit variable-pitch :foreground "#839496" :height 1.0))))
 '(org-level-6 ((t (:inherit variable-pitch :foreground "#839496" :height 1.0))))
 '(org-level-7 ((t (:inherit variable-pitch :foreground "#839496" :height 1.0))))
 '(org-level-8 ((t (:inherit variable-pitch :foreground "#839496" :height 1.0))))
 '(show-paren-match ((t (:foreground "red"))))
 '(show-paren-mismatch ((t (:background "red"))))
 '(whitespace-line ((t (:underline t)))))

(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(custom-safe-themes
   (quote
    ("c74e83f8aa4c78a121b52146eadb792c9facc5b1f02c917e3dbb454fca931223" "a27c00821ccfd5a78b01e4f35dc056706dd9ede09a8b90c6955ae6a390eb1c1e" "3c83b3676d796422704082049fc38b6966bcad960f896669dfc21a7a37a748fa" "c5a044ba03d43a725bd79700087dea813abcb6beb6be08c7eb3303ed90782482" "756597b162f1be60a12dbd52bab71d40d6a2845a3e3c2584c6573ee9c332a66e" "6a37be365d1d95fad2f4d185e51928c789ef7a4ccf17e7ca13ad63a8bf5b922f" default)))
 '(package-selected-packages
   (quote
    (zenburn-theme org yasnippet web-mode visual-regexp solarized-theme smart-mode-line ruby-end rainbow-mode projectile org-bullets magit macrostep helm-ls-git go-mode flycheck elisp-slime-nav coffee-mode bm ace-jump-mode))))

(defun my-load (source &optional ignore-if-missing)
  "Load the byte-compiled version of SOURCE.
If IGNORE-IF-MISSING is non-NIL, then don't throw an
error if SOURCE is missing."
  (unless (string-suffix-p ".el" source)
    (setq source (concat source ".el")))
  (let* ((source (expand-file-name source))
         (compiled (concat source "c")))
    (cond ((file-exists-p source)
           (when (file-newer-than-file-p source compiled)
             (let (byte-compile-verbose)
               (byte-compile-file source)))
           (load compiled nil t t))
          (t (when (file-exists-p compiled)
               (delete-file compiled))
             (unless ignore-if-missing
               (error "my-load: missing `%s'" source))))))

(byte-compile 'my-load)

(defvar my-packages
  '(
    ace-jump-mode
    bm
    coffee-mode
    elisp-slime-nav
    flycheck
    go-mode
    helm
    helm-ls-git
    ;; helm-projectile
    macrostep
    magit
    org
    org-bullets
    projectile
    rainbow-mode
    ruby-end
    smart-mode-line
    solarized-theme
    visual-regexp
    web-mode
    yasnippet
    zenburn-theme
    ))

(let* ((package--builtins '())
       (missing (remove-if 'package-installed-p my-packages)))
  (when missing
    (package-refresh-contents)
    (mapc 'package-install missing)))

(my-load "~/.emacs.d/my-emacs")
(setq my-time-diff-secs (float-time (time-since my-emacs-start-time)))
